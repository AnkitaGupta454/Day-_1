#include<iostream>
using namespace std;
class Node { 
public: 
    int data; 
    Node* next; 
}; 

Node* newNode(int data) 
{ 
    Node* new_node = new Node(); 
    new_node->data = data; 
    new_node->next = NULL; 
    return new_node; 
} 

void push(Node** head_ref, int new_data) 
{ 
    Node* new_node = newNode(new_data); 
    new_node->next = (*head_ref); 
    (*head_ref) = new_node; 
} 
void Display(Node *p)
{
	while(p!=NULL)
	{
		cout<<p->data<<" ";
		p=p->next;
	}
}

void point(Node *p,Node *q)
{
    while(p!=NULL&&q!=NULL){
    if(p->data==q->data)
    {
        cout<<"\n point of intersection of two linked list is "<<p->data;
        break;
    }
    else if(p->data<q->data)
        p=p->next;
    else
        q=q->next;
}
}

int main(){
     struct Node *first=NULL, *second=NULL;
     push(&first,8);
     push(&first,5);
     push(&first,4);
     push(&first,3);
     cout<<"\n first list is \n";
     Display(first);
     push(&second,9);
     push(&second,8);
     cout<<"\n second list is \n";
     Display(second);
     point(first,second);
    return 0;
}
