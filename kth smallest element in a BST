#include <bits/stdc++.h> 
using namespace std; 
  
class node  
{  
    public: 
    int data;  
    node* left, *right;  
};  
node* kthSmallest(node* root, int& k)
{
    if (root == NULL)
        return NULL;
    node* left = kthSmallest(root->left, k);
    if (left != NULL)
        return left;
    k--;
    if (k == 0)
        return root;
    return kthSmallest(root->right, k);
}
void printKthSmallest(node* root, int k)
{
    int count = 0;
    node* res = kthSmallest(root, k);
    if (res == NULL)
        cout << "There are less than k nodes in the BST";
    else
        cout << "K-th Smallest Element is " << res->data;
}
node* newNode(int data)  
{  
    node* Node = new node(); 
    Node->data = data;  
    Node->left = NULL;  
    Node->right = NULL;  
  
    return(Node);  
} 
node* insert(node* Node, int key) 
{ 
    if (Node == NULL) return newNode(key); 
    if (key < Node->data) 
        Node->left  = insert(Node->left, key); 
    else if (key > Node->data) 
        Node->right = insert(Node->right, key); 
    return Node; 
}
int main() 
{ 
    node *root = NULL; 
    root = insert(root, 50); 
    insert(root, 30); 
    insert(root, 20); 
    insert(root, 40); 
    insert(root, 70); 
    insert(root, 60); 
    insert(root, 80); 
  
   int k=3;
   printKthSmallest(root,k);
  
    return 0; 
}
