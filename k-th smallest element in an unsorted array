#include <bits/stdc++.h>
using namespace std;

void minHeapify(int a[],int n,int i)
{
    int smallest=i,l=(2*i)+2,r=(2*i)+1;
    while(l<n&&a[l]<a[smallest])
    smallest=l;
    while(r<n&&a[r]<a[smallest])
    smallest=r;
    if(smallest!=i)
    {
        swap(a[smallest],a[i]);
        minHeapify(a,n,smallest);
    }
}

void buildMinHeap(int a[],int n){
    for(int i=(n/2)-1;i>=0;i--)
    minHeapify(a,n,i);
}

int extractMin(int a[],int n)
{
    if(n==0)
    return INT_MAX;
    int min=a[0];
    if(n>1)
    {
        a[0]=a[n-1];
        minHeapify(a,n,0);
    }
    n--;
    return min;
}
int main()
{
    int arr[] = { 12, 3, 5, 7, 19,1 };
    int n = sizeof(arr) / sizeof(arr[0]);
    buildMinHeap(arr,n);
    int k=2,min;
    for(int i=0;i<k;i++)
     min= extractMin(arr,n);
     cout<<"k-th smallest element is "<<min;
    return 0;
}

OUTPUT:-
k-th smallest element is 3
