#include <iostream>
using namespace std;
class node{
    public:
    int data;
    node *left;
    node *right;
};
node* newNode(int data)
{
    node* temp=new node();
    temp->data=data;
    temp->right=temp->left=NULL;
}

node* insert(node* root,int data)
{
    if(root==NULL)
    return newNode(data);
    if(data<root->data)
     root->left=insert(root->left,data);
    else if(data>root->data)
    root->right=insert(root->right,data);
    return root;
}

void Inorder(node* root)
{
    if(root!=NULL)
    {
        Inorder(root->left);
        cout<<root->data<<" ";
        Inorder(root->right);
    }
}


int min(node* root)
{
    if(root==NULL)
    return (root->data);
    while(root->left!=NULL)
    root=root->left;
    return (root->data);
}
int max(node* root)
{
    if(root==NULL)
    return(root->data);
    while(root->right!=NULL)
    {
        root=root->right;
    }
    return root->data;
}
int main()
{
    node* root = NULL; 
    root = insert(root, 50); 
    insert(root, 30); 
    insert(root, 20); 
    insert(root, 40); 
    insert(root, 70); 
    insert(root, 60); 
    insert(root, 80); 
  
    // print inoder traversal of the BST 
    Inorder(root); 
    int Min=min(root);
    int Max=max(root);
    cout<<"\n Minimum value in a BST is "<<Min;
    cout<<"\n MAximum value in a BST is "<<Max;
    return 0;
}
