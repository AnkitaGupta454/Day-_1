#include <bits/stdc++.h>
using namespace std;

void maxHeapify(int a[],int n,int i)
{
    int largest=i,l=(2*i)+2,r=(2*i)+1;
    while(l<n&&a[l]>a[largest])
    largest=l;
    while(r<n&&a[r]>a[largest])
    largest=r;
    if(largest!=i)
    {
        swap(a[largest],a[i]);
        maxHeapify(a,n,largest);
    }
}

void MaxHeap(int a[],int n){
    for(int i=(n/2)-1;i>=0;i--)
    maxHeapify(a,n,i);
}

void merged(int c[],int a[],int b[],int n,int m)
{
    for(int i=0;i<n;i++)
    c[i]=a[i];
    for(int i=0;i<m;i++)
    c[n+i]=b[i];
    MaxHeap(c,n+m);
    
}

int main() 
{ 
    int a[] = { 10, 5, 6, 2 }; 
    int b[] = { 12, 7, 9 }; 
  
    int n = sizeof(a) / sizeof(a[0]); 
    int m = sizeof(b) / sizeof(b[0]); 
  
    int merge[m + n]; 
    merged(merge, a, b, n, m); 
  
    for (int i = 0; i < n + m; i++) 
        cout << merge[i] << " "; 
  
    return 0; 
}

OUTPUT:-
12 10 9 5 2 7 6
